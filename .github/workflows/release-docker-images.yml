name: Release images

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]
    

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  USER_NAME: ${{github.actor}}
  NEW_TAG:

jobs:
  build-and-test:
    permissions:
      contents: write
      pull-requests: write
    uses: ./.github/workflows/dotnet.yml

  compute:
      runs-on: ubuntu-latest
      needs: build-and-test
      outputs:
        REGISTRY: ${{ env.REGISTRY }}
        USER_NAME: ${{ env.USER_NAME }}
      steps:
      - name: Compute outputs
        run: |
          echo "REGISTRY=${{ env.REGISTRY }}" >> $GITHUB_OUTPUT
          echo "USER_NAME=${{ env.USER_NAME }}" >> $GITHUB_OUTPUT   

  build-docker-image:
    runs-on: ubuntu-latest
    needs: 
      - compute
      - build-and-test
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./MangaShelf/Dockerfile
            image: ${{ needs.compute.outputs.REGISTRY }}/${{ needs.compute.outputs.USER_NAME }}/manga-shelf-ui
          - dockerfile: ./MangaShelf.Api/Dockerfile
            image: ${{ needs.compute.outputs.REGISTRY }}/${{ needs.compute.outputs.USER_NAME }}/manga-shelf-api
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.5.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=${{ needs.build-and-test.outputs.NEW_TAG }}
            type=raw,value=latest

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
